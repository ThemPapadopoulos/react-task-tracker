{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccfa903f.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nimport React from 'react'\n\nconst Button = ({ color, text, onClick }) => {\n  \n      return (\n<button onClick={onClick} style= {{backgroundColor: color}} className='btn'>\n      {text}\n</button>\n      )\n}\n\nButton.defaultProps = {\n      color: 'steelblue'\n}\n\nButton.propTypes = {\ntext: PropTypes.string,\ncolor: PropTypes.string,\nonClick: PropTypes.func,\n}\n\nexport default Button\n"," import PropTypes from 'prop-types'\nimport Button from \"./Button\";\n\n const Header = ({ title, onAdd, showAdd }) => {\n    \n       return (\n             <header className='header'>\n                   <h1>{title}</h1>\n                   <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add' } onClick={onAdd} />\n             </header>\n       )\n }\n\n Header.defaultProps = {\n       title: 'Task Tracker',\n }\n\n Header.propTypes = {\n       title: PropTypes.string.isRequired,\n }\n \n export default Header\n ","import  {FaTimes} from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle}) => {\n      return (\n            <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>\n            onToggle(task.id)}>\n                  <h3>{task.text} \n                  <FaTimes style={{ color:'red', cursor: 'pointer'}} \n                  onClick= {() => onDelete(task.id)} /></h3>\n                  <p>{task.day}</p>\n            </div>\n      )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n      \n  return (\n\n    <>\n      {tasks.map((task) => (\n        <Task key={task.id} \n        task={task} \n        onDelete={onDelete} \n        onToggle={onToggle} />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import {useState} from 'react'\n\nconst AddTask = ({ onAdd }) => {\n      const [text, setText] = useState('')\n      const [day, setDay] = useState('')\n      const [reminder, setReminder] = useState(false)\n     \n      const onSubmit =  (e) => {\n            e.preventDefault()\n           \n            if(!text){\n                  alert('Please add a task')\n                  return\n            }\n\n            onAdd({ text, day, reminder})\n\n            setText('')\n            setDay('')\n            setReminder(false)\n      }\n\n      return (\n            <form className=\"add-form\" onSubmit={onSubmit}>\n                  <div className=\"form-control\">\n                        <label>Task</label>\n                        <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)} />\n                  </div>\n                  <div className=\"form-control\">\n                        <label>Day & Time</label>\n                        <input type=\"text\" placeholder=\"Add Day & Time\" value={day} onChange={(e) => setDay(e.target.value)} />\n                  </div>\n                  <div className=\"form-control form-control-check\">\n                        <label>Set Reminder</label>\n                        <input \n                        type=\"checkbox\" \n                        checked={reminder}\n                        value={reminder} \n                        onChange={(e) => setReminder(e.currentTarget.checked)} />\n                  </div>\n\n                  <input type=\"submit\"\n                   value=\"Save Task\" \n                   className=\"btn btn-block\" />\n            </form>\n      )\n}\n\nexport default AddTask\n","import React, { useState } from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n            {\n              id: 1,\n              text: \"Doctors Appointment\",\n              day: \"Feb 5th at 2:30pm\",\n              reminder: true,\n            },\n            {\n              id: 2,\n              text: \"Meeting at School\",\n              day: \"Feb 6th at 1:30pm\",\n              reminder: true,\n            },\n            {\n              id: 3,\n              text: \"Food Shopping\",\n            day: \"Feb 5th at 2:30pm\",\n              reminder: true,\n            },\n          ])\n\n// Add Task\n\nconst addTask = (task)=> {\n  const id= Math.floor(Math.random()*10000) + 1\n\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n// delete task\n          const deleteTask = (id) =>{\n            setTasks(tasks.filter((task) => task.id !==id))\n          }\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task)=> task.id ===id ? { ...task, reminder: !task.reminder} : task))\n}\n  return (\n    <div className=\"container\">\n    <Header onAdd={() =>\n     setShowAddTask(!showAddTask)} \n    showAdd={showAddTask}/>\n    {showAddTask && <AddTask onAdd={addTask} />}\n    {tasks.length > 0 ? <Tasks tasks={tasks} \n    onDelete={deleteTask} onToggle={toggleReminder} /> : \"No Tasks To Show\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}